(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-8d52d0ac"],{bb72:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return o})),r.d(t,"c",(function(){return s}));var n=r("e041");function i(e,t){let r={query:e};return t&&(r={...t,...r}),r}function s(e){return"string"==typeof e?Object(n["I"])(e):e}function o(e,t,r){const n={};for(const i in e){if("declaredClass"===i)continue;const s=e[i];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){n[i]=[];for(let e=0;e<s.length;e++)n[i][e]=o(s[e])}else if("object"==typeof s)if(s.toJSON){const e=s.toJSON(r&&r[i]);n[i]=t?e:JSON.stringify(e)}else n[i]=t?s:JSON.stringify(s);else n[i]=s}return n}},d44e9:function(e,t,r){"use strict";r.r(t);var n=r("a4ee"),i=(r("c120"),r("e92d"),r("cea0")),s=r("59b2"),o=r("d386"),a=r("e041"),c=(r("8eed"),r("f402"),r("9209")),O=r("2eab"),l=r("bb72");async function u(e,t,r){const n=Object(l["c"])(e),i={...n.query,f:"json",...t.toJSON()},s=Object(l["a"])(i,r);return Object(O["default"])(n.path+"/areasAndLengths",s).then(e=>e.data)}var f=r("1219"),N=(r("e06a"),r("a9ab"));function p(e){return{geometryType:Object(N["c"])(e[0]),geometries:e.map(e=>e.toJSON())}}function b(e,t,r){const n=Object(N["b"])(t);return e.map(e=>{const t=n.fromJSON(e);return t.spatialReference=r,t})}async function y(e,t,r,n){const i=t[0].spatialReference,s=Object(l["c"])(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify(p(t).geometries),polylines:JSON.stringify(p(r).geometries)},a=Object(l["a"])(o,n);return Object(O["default"])(s.path+"/autoComplete",a).then(({data:e})=>(e.geometries||[]).map(({rings:e})=>new f["a"]({spatialReference:i,rings:e})))}async function j(e,t,r){const n=Object(l["c"])(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference||t.geometries[0].spatialReference,o=Object(l["a"])(i,r);return Object(O["default"])(n.path+"/buffer",o).then(e=>(e.data.geometries||[]).map(({rings:e})=>new f["a"]({spatialReference:s,rings:e})))}async function d(e,t,r){const n=t[0].spatialReference,i=Object(l["c"])(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(p(t))},o=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/convexHull",o).then(({data:e})=>Object(N["a"])(e.geometry).set({spatialReference:n}))}async function m(e,t,r,n){const i=Object(l["c"])(e),s=t[0].spatialReference,o={...n,query:{...i.query,f:"json",sr:JSON.stringify(s),target:JSON.stringify({geometryType:Object(N["c"])(t[0]),geometries:t}),cutter:JSON.stringify(r)}},a=await Object(O["default"])(i.path+"/cut",o),{cutIndexes:c,geometries:u=[]}=a.data;return{cutIndexes:c,geometries:u.map(e=>{const t=Object(N["a"])(e);return t.spatialReference=s,t})}}async function T(e,t,r){const n=t.geometries[0].spatialReference,i=Object(l["c"])(e),s={...i.query,f:"json",...t.toJSON()},o=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/densify",o).then(({data:e})=>(e.geometries||[]).map(e=>Object(N["a"])(e).set({spatialReference:n})))}async function g(e,t,r,n){const i=t[0].spatialReference,s=Object(l["c"])(e);let o={query:{...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(p(t)),geometry:JSON.stringify({geometryType:Object(N["c"])(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),Object(O["default"])(s.path+"/difference",o).then(({data:e})=>(e.geometries||[]).map(e=>Object(N["a"])(e).set({spatialReference:i})))}async function I(e,t,r){const n=Object(l["c"])(e),i={...n.query,f:"json",...t.toJSON()},s=Object(l["a"])(i,r);return Object(O["default"])(n.path+"/distance",s).then(({data:e})=>e&&e.distance)}var S=r("fa8a");const _=new S["a"]({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});async function R(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const i=t.conversionType||"mgrs";n.conversionType=_.toJSON(i),n.conversionMode=t.conversionMode;const s=Object(l["c"])(e),o={...s.query,f:"json",...n},a=Object(l["a"])(o,r);return Object(O["default"])(s.path+"/fromGeoCoordinateString",a).then(({data:e})=>e.coordinates)}const h=new S["a"]({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function U(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),i={maxDeviation:n};return t&&t.length&&(i.geometries=JSON.stringify({geometryType:Object(N["c"])(t[0]),geometries:t}),i.sr=JSON.stringify(t[0].spatialReference)),h.write(r,i,"deviationUnit"),i}var E=r("6a0e");let A=class extends E["a"]{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],A.prototype,"deviationUnit",void 0),Object(n["a"])([Object(s["b"])({json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.geometries=e.map(e=>e.toJSON())}}}})],A.prototype,"geometries",void 0),Object(n["a"])([Object(s["b"])({type:Number,json:{write:!0}})],A.prototype,"maxDeviation",void 0),A=Object(n["a"])([Object(o["a"])("esri.tasks.support.GeneralizeParameters")],A),A.from=Object(i["m"])(A);var J=A,v=J;async function w(e,t,r){const n=(t=v.from(t)).toJSON(),i=U(t),s=Object(l["c"])(e),o={...s.query,f:"json",...i},a=n.geometries[0].spatialReference,c=Object(l["a"])(o,r);return Object(O["default"])(s.path+"/generalize",c).then(({data:e})=>(e.geometries||[]).map(e=>Object(N["a"])(e).set({spatialReference:a})))}async function D(e,t,r,n){const i=t[0].spatialReference,s=Object(l["c"])(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(p(t)),geometry:JSON.stringify({geometryType:Object(N["c"])(r),geometry:r.toJSON()})},a=Object(l["a"])(o,n);return Object(O["default"])(s.path+"/intersect",a).then(({data:e})=>(e.geometries||[]).map(e=>Object(N["a"])(e).set({spatialReference:i})))}function L(e,t,r){const n=t.map(e=>e.toJSON()),i=t[0].spatialReference,s=Object(l["c"])(e),o={...s.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(n)},a=Object(l["a"])(o,r);return Object(O["default"])(s.path+"/labelPoints",a).then(({data:e})=>(e.labelPoints||[]).map(e=>Object(N["a"])(e).set({spatialReference:i})))}const C=new S["a"]({preserveShape:"preserve-shape"});function M(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:i}=e.toJSON(),s={};s.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return s.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(s.lengthUnit=r),n&&(s.geodesic=n),i&&(s.calculationType=C.toJSON(i)),s}var q=r("521c");let G=class extends E["a"]{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],G.prototype,"calculationType",void 0),Object(n["a"])([Object(s["b"])({type:Boolean,json:{write:!0}})],G.prototype,"geodesic",void 0),Object(n["a"])([Object(s["b"])({json:{write:!0}})],G.prototype,"lengthUnit",void 0),Object(n["a"])([Object(s["b"])({type:[q["a"]],json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.polylines=e.map(e=>e.toJSON())}}}})],G.prototype,"polylines",void 0),G=Object(n["a"])([Object(o["a"])("esri.tasks.support.LengthsParameters")],G),G.from=Object(i["m"])(G);var x=G,H=x;async function k(e,t,r){t=H.from(t);const n=M(t),i=Object(l["c"])(e),s={...i.query,f:"json",...n},o=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/lengths",o).then(({data:e})=>e)}const Y=new S["a"]({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),F=new S["a"]({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function K(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:i,offsetUnit:s}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:Object(N["c"])(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),i&&(o.offsetHow=Y.toJSON(i)),s&&(o.offsetUnit=F.toJSON(s)),o}let B=class extends E["a"]{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};Object(n["a"])([Object(s["b"])({type:Number,json:{write:!0}})],B.prototype,"bevelRatio",void 0),Object(n["a"])([Object(s["b"])({json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.geometries=e.map(e=>e.toJSON())}}}})],B.prototype,"geometries",void 0),Object(n["a"])([Object(s["b"])({type:Number,json:{write:!0}})],B.prototype,"offsetDistance",void 0),Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],B.prototype,"offsetHow",void 0),Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],B.prototype,"offsetUnit",void 0),B=Object(n["a"])([Object(o["a"])("esri.tasks.support.OffsetParameters")],B),B.from=Object(i["m"])(B);var P=B,Q=P;async function V(e,t,r){t=Q.from(t);const n=K(t),i=Object(l["c"])(e),s={...i.query,f:"json",...n},o=t.geometries[0].spatialReference,a=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/offset",a).then(({data:e})=>(e.geometries||[]).map(e=>Object(N["a"])(e).set({spatialReference:o})))}var z=r("0024");const W=Object(i["m"])(z["a"]);async function X(e,t,r){t=W(t);const n=Object(l["c"])(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference,o=Object(N["c"])(t.geometries[0]),a=Object(l["a"])(i,r);return Object(O["default"])(n.path+"/project",a).then(({data:{geometries:e}})=>b(e,o,s))}const Z=new S["a"]({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function $(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:i}=e.toJSON(),s={};if(t&&t.length){s.geometries1=JSON.stringify({geometryType:Object(N["c"])(t[0]),geometries:t});const e=t[0].spatialReference;s.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(s.geometries2=JSON.stringify({geometryType:Object(N["c"])(r[0]),geometries:r})),n&&(s.relation=Z.toJSON(n)),i&&(s.relationParam=i),s}let ee=class extends E["a"]{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};Object(n["a"])([Object(s["b"])({json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.geometries1=e.map(e=>e.toJSON())}}}})],ee.prototype,"geometries1",void 0),Object(n["a"])([Object(s["b"])({json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.geometries2=e.map(e=>e.toJSON())}}}})],ee.prototype,"geometries2",void 0),Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],ee.prototype,"relation",void 0),Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],ee.prototype,"relationParameter",void 0),ee=Object(n["a"])([Object(o["a"])("esri.tasks.support.RelationParameters")],ee),ee.from=Object(i["m"])(ee);var te=ee,re=te;async function ne(e,t,r){t=re.from(t);const n=$(t),i=Object(l["c"])(e),s={...i.query,f:"json",...n},o=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/relation",o).then(({data:e})=>e.relations)}async function ie(e,t,r,n){const i=t.spatialReference,s=Object(l["c"])(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:Object(N["c"])(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},a=Object(l["a"])(o,n);return Object(O["default"])(s.path+"/reshape",a).then(({data:e})=>Object(N["a"])(e.geometry).set({spatialReference:i}))}async function se(e,t,r){const n="string"==typeof e?Object(a["I"])(e):e,i=t[0].spatialReference,s=Object(N["c"])(t[0]),o={...r,query:{...n.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify(p(t))}},{data:c}=await Object(O["default"])(n.path+"/simplify",o);return b(c.geometries,s,i)}async function oe(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const i=t.conversionType||"mgrs";n.conversionType=_.toJSON(i),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const s=Object(l["c"])(e),o={...s.query,f:"json",...n},a=Object(l["a"])(o,r);return Object(O["default"])(s.path+"/toGeoCoordinateString",a).then(({data:e})=>e.strings)}const ae=new S["a"]({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function ce(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),i={};return i.extendHow=ae.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),n&&(i.trimExtendTo=JSON.stringify(n)),i}let Oe=class extends E["a"]{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};Object(n["a"])([Object(s["b"])({type:String,json:{write:!0}})],Oe.prototype,"extendHow",void 0),Object(n["a"])([Object(s["b"])({type:[q["a"]],json:{read:{reader:e=>e?e.map(e=>Object(N["a"])(e)):null},write:{writer:(e,t)=>{t.polylines=e.map(e=>e.toJSON())}}}})],Oe.prototype,"polylines",void 0),Object(n["a"])([Object(s["b"])({json:{read:{reader:e=>e?Object(N["a"])(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],Oe.prototype,"trimExtendTo",void 0),Oe=Object(n["a"])([Object(o["a"])("esri.tasks.support.TrimExtendParameters")],Oe),Oe.from=Object(i["m"])(Oe);var le=Oe,ue=le;async function fe(e,t,r){t=ue.from(t);const n=ce(t),i=Object(l["c"])(e),s={...i.query,f:"json",...n},o=t.sr,a=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/trimExtend",a).then(({data:e})=>(e.geometries||[]).map(({paths:e})=>new q["a"]({spatialReference:o,paths:e})))}async function Ne(e,t,r){const n=t[0].spatialReference,i=Object(l["c"])(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(p(t))},o=Object(l["a"])(s,r);return Object(O["default"])(i.path+"/union",o).then(({data:e})=>Object(N["a"])(e.geometry).set({spatialReference:n}))}let pe=class extends c["a"]{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return u(this.url,e,t)}autoComplete(e,t,r){return y(this.url,e,t,r)}buffer(e,t){return j(this.url,e,t)}convexHull(e,t){return d(this.url,e,t)}cut(e,t,r){return m(this.url,e,t,r)}densify(e,t){return T(this.url,e,t)}difference(e,t,r){return g(this.url,e,t,r)}distance(e,t){return I(this.url,e,t)}fromGeoCoordinateString(e,t){return R(this.url,e,t)}generalize(e,t){return w(this.url,e,t)}intersect(e,t,r){return D(this.url,e,t,r)}labelPoints(e,t){return L(this.url,e,t)}lengths(e,t){return k(this.url,e,t)}offset(e,t){return V(this.url,e,t)}project(e,t){return X(this.url,e,t)}relation(e,t){return ne(this.url,e,t)}reshape(e,t,r){return ie(this.url,e,t,r)}simplify(e,t){return se(this.url,e,t)}toGeoCoordinateString(e,t){return oe(this.url,e,t)}trimExtend(e,t){return fe(this.url,e,t)}union(e,t){return Ne(this.url,e,t)}};pe.UNIT_METER=9001,pe.UNIT_GERMAN_METER=9031,pe.UNIT_FOOT=9002,pe.UNIT_SURVEY_FOOT=9003,pe.UNIT_CLARKE_FOOT=9005,pe.UNIT_FATHOM=9014,pe.UNIT_NAUTICAL_MILE=9030,pe.UNIT_SURVEY_CHAIN=9033,pe.UNIT_SURVEY_LINK=9034,pe.UNIT_SURVEY_MILE=9035,pe.UNIT_KILOMETER=9036,pe.UNIT_CLARKE_YARD=9037,pe.UNIT_CLARKE_CHAIN=9038,pe.UNIT_CLARKE_LINK=9039,pe.UNIT_SEARS_YARD=9040,pe.UNIT_SEARS_FOOT=9041,pe.UNIT_SEARS_CHAIN=9042,pe.UNIT_SEARS_LINK=9043,pe.UNIT_BENOIT_1895A_YARD=9050,pe.UNIT_BENOIT_1895A_FOOT=9051,pe.UNIT_BENOIT_1895A_CHAIN=9052,pe.UNIT_BENOIT_1895A_LINK=9053,pe.UNIT_BENOIT_1895B_YARD=9060,pe.UNIT_BENOIT_1895B_FOOT=9061,pe.UNIT_BENOIT_1895B_CHAIN=9062,pe.UNIT_BENOIT_1895B_LINK=9063,pe.UNIT_INDIAN_FOOT=9080,pe.UNIT_INDIAN_1937_FOOT=9081,pe.UNIT_INDIAN_1962_FOOT=9082,pe.UNIT_INDIAN_1975_FOOT=9083,pe.UNIT_INDIAN_YARD=9084,pe.UNIT_INDIAN_1937_YARD=9085,pe.UNIT_INDIAN_1962_YARD=9086,pe.UNIT_INDIAN_1975_YARD=9087,pe.UNIT_FOOT_1865=9070,pe.UNIT_RADIAN=9101,pe.UNIT_DEGREE=9102,pe.UNIT_ARCMINUTE=9103,pe.UNIT_ARCSECOND=9104,pe.UNIT_GRAD=9105,pe.UNIT_GON=9106,pe.UNIT_MICRORADIAN=9109,pe.UNIT_ARCMINUTE_CENTESIMAL=9112,pe.UNIT_ARCSECOND_CENTESIMAL=9113,pe.UNIT_MIL6400=9114,pe.UNIT_BRITISH_1936_FOOT=9095,pe.UNIT_GOLDCOAST_FOOT=9094,pe.UNIT_INTERNATIONAL_CHAIN=109003,pe.UNIT_INTERNATIONAL_LINK=109004,pe.UNIT_INTERNATIONAL_YARD=109001,pe.UNIT_STATUTE_MILE=9093,pe.UNIT_SURVEY_YARD=109002,pe.UNIT_50KILOMETER_LENGTH=109030,pe.UNIT_150KILOMETER_LENGTH=109031,pe.UNIT_DECIMETER=109005,pe.UNIT_CENTIMETER=109006,pe.UNIT_MILLIMETER=109007,pe.UNIT_INTERNATIONAL_INCH=109008,pe.UNIT_US_SURVEY_INCH=109009,pe.UNIT_INTERNATIONAL_ROD=109010,pe.UNIT_US_SURVEY_ROD=109011,pe.UNIT_US_NAUTICAL_MILE=109012,pe.UNIT_UK_NAUTICAL_MILE=109013,pe.UNIT_SQUARE_INCHES="esriSquareInches",pe.UNIT_SQUARE_FEET="esriSquareFeet",pe.UNIT_SQUARE_YARDS="esriSquareYards",pe.UNIT_ACRES="esriAcres",pe.UNIT_SQUARE_MILES="esriSquareMiles",pe.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",pe.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",pe.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",pe.UNIT_SQUARE_METERS="esriSquareMeters",pe.UNIT_ARES="esriAres",pe.UNIT_HECTARES="esriHectares",pe.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",Object(n["a"])([Object(s["b"])()],pe.prototype,"url",void 0),pe=Object(n["a"])([Object(o["a"])("esri.tasks.GeometryService")],pe);var be=pe;t["default"]=be}}]);
//# sourceMappingURL=chunk-8d52d0ac.c6b55d30.js.map