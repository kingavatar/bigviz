{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/core/workers/request.js"],"names":["t","s","o","n","responseType","a","signal","invokeStaticMessage","url","options","then","e","data","l","i","u","c","Blob","FileReaderSync","readAsText","JSON","parse","requestOptions","message","error","ssl"],"mappings":"kHAAA,2EAIuD,IAAIA,EAAE,SAASC,EAAEA,EAAEC,EAAE,IAAI,IAAIC,EAAED,EAAEE,aAAaD,EAAE,SAASA,GAAG,SAASA,GAAG,SAASA,GAAG,iBAAiBA,IAAIA,EAAE,QAAQA,EAAE,OAAO,MAAME,EAAEH,GAAGA,EAAEI,OAAO,cAAcJ,EAAEI,OAAO,OAAEC,oBAAoB,UAAU,CAACC,IAAIP,EAAEQ,QAAQP,GAAG,CAACI,OAAOD,IAAIK,KAAMC,IAAI,MAAMN,EAAEM,EAAEC,KAAK,IAAIC,EAAEC,EAAEC,EAAEC,EAAE,GAAGX,KAAK,SAASF,GAAG,SAASA,GAAG,SAASA,IAAIU,EAAE,IAAII,KAAK,CAACZ,IAAI,SAASF,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIkB,gBAAgBJ,EAAEd,EAAEmB,WAAWN,GAAG,SAASV,KAAK,CAAC,IAAIY,EAAEK,KAAKC,MAAMP,GAAG,MAAM,MAAMH,GAAG,MAAMX,EAAE,IAAIW,EAAEH,IAAIP,EAAEqB,eAAepB,GAAG,MAAM,IAAI,OAAE,iBAAiBS,EAAEY,QAAQvB,GAAG,GAAGe,EAAES,MAAM,CAAC,MAAMb,EAAE,IAAII,EAAES,MAAMhB,IAAIP,EAAEqB,eAAepB,GAAG,MAAM,IAAI,OAAE,iBAAiBa,EAAES,MAAMD,QAAQZ,IAAI,OAAOR,GAAG,IAAI,OAAOa,EAAED,EAAE,MAAM,IAAI,OAAOC,EAAEF,EAAE,MAAM,IAAI,OAAOE,EAAEH,EAAE,MAAM,QAAQG,EAAEX,EAAE,MAAM,CAACO,KAAKI,EAAEM,eAAepB,EAAEuB,IAAId,EAAEc,IAAIjB,IAAIP","file":"js/chunk-2d0d03e5.20ca6c59.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport e from\"../global.js\";import r from\"../Error.js\";let t;function s(s,o={}){let n=o.responseType;n?\"json\"!==n&&\"text\"!==n&&\"blob\"!==n&&\"array-buffer\"!==n&&(n=\"text\"):n=\"json\";const a=o&&o.signal;return delete o.signal,e.invokeStaticMessage(\"request\",{url:s,options:o},{signal:a}).then((e=>{const a=e.data;let l,i,u,c;if(a&&!(\"json\"!==n&&\"text\"!==n&&\"blob\"!==n||(l=new Blob([a]),\"json\"!==n&&\"text\"!==n||(t||(t=new FileReaderSync),i=t.readAsText(l),\"json\"!==n)))){try{u=JSON.parse(i||null)}catch(e){const t={...e,url:s,requestOptions:o};throw new r(\"request:server\",e.message,t)}if(u.error){const e={...u.error,url:s,requestOptions:o};throw new r(\"request:server\",u.error.message,e)}}switch(n){case\"json\":c=u;break;case\"text\":c=i;break;case\"blob\":c=l;break;default:c=a}return{data:c,requestOptions:o,ssl:e.ssl,url:s}}))}export{s as execute};\n"],"sourceRoot":""}